package com.ac.in.security;

import org.springframework.context.annotation.Bean;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.stereotype.Controller;

@Controller
public class SecurityConfig {

	 @Bean
	    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
	        http
	            .authorizeHttpRequests((authz) -> authz
	                .requestMatchers("/","/login", "/signup","/user3", "/css/**", "/js/**").permitAll() // Allow access without authentication
	                .anyRequest().authenticated() // All other requests require authentication
	            )
	            .formLogin((form) -> form
	                .loginPage("/login") // Custom login page
	                .loginProcessingUrl("/login")
	                .defaultSuccessUrl("/user3", true) // Redirect to user page after login
	                .permitAll()
	            )
	            .logout((logout) -> logout
	                .logoutUrl("/logout")
	                .logoutSuccessUrl("/login?logout")
	                .permitAll()
	            );

	        return http.build();
	    }

    @Bean
    public UserDetailsService userDetailsService() {
        UserDetails user = User.withDefaultPasswordEncoder()
            .username("user")
            .password("password")
            .roles("USER")
            .build();

        return new InMemoryUserDetailsManager(user);
    }
    
    
    protected void configure(HttpSecurity http) throws Exception {
        http
            .authorizeRequests()
                .requestMatchers("/show-tickets").authenticated()  // Protect my-bookings page
                .and()
            .formLogin()
                .loginPage("/login")
                .permitAll();
    }

}


